/* variables */

/* technique from https://stackoverflow.com/questions/70845195/define-dark-mode-for-both-a-class-and-a-media-query-without-repeat-css-custom-p */

@media (prefers-color-scheme: dark) {
    :root {
        --light: ;
        --dark: initial;
    }
 }
 
 @media (prefers-color-scheme: light) {
    :root {
        --dark: ;
        --light: initial;
    }
 }

:root[data-preferred-color-scheme="light"] {
    --dark: ;
    --light: initial;
}

:root[data-preferred-color-scheme="dark"] {
    --light: ;
    --dark: initial;
}

:root {
    --low-contrast: initial;
    --high-contrast: ;
}

@media print, (prefers-contrast: more) {
    :root {
        --low-contrast: ;
        --high-contrast: initial;
    }
}
 
:root[data-preferred-contrast="more"] {
    --low-contrast: ;
    --high-contrast: initial;
}

/* light/dark color scheme */

body, a {
    background: var(--light, #ddd) var(--dark, #333);
    color: var(--light, #222) var(--dark, #ccc);
}

.puzzle-grid td {
    background: var(--light, #bbb) var(--dark, #666);
    border: var(--high-contrast, 1px solid #222) var(--low-contrast);
}

/* layout rules */

* {
    box-sizing: border-box;
}

body {
    margin: 0;
    padding: 0;
    text-align: center;
}

h1, h2, h3, h4, h5, h6 {
    font-size: 1rem;
}

/* control panel */
.menu-container {
    position: fixed;
    top: 0;
    left: 0;
    padding: 1em;
    text-align: left;
}
.menu-button {
    cursor: pointer;
    user-select: none;
}
.menu-screen {
    position: fixed;
    top: 0;
    left: 0;
    max-height: 0;
    overflow: hidden;
    text-align: center;
    cursor: pointer;
    transition: background 500ms linear;
}
.menu-container.open > .menu-screen,
.menu-container.closed.transitioning > .menu-screen {
    width: 100vw;
    height: 100vh;
    max-height: 100vh;
}
.menu-container.open > .menu-screen {
    background: rgba(0,0,0,0.5);
}
.menu-contents {
    position: relative;
    display: inline-block;
    cursor: initial;
    text-align: left;
    background: var(--light, #ddd) var(--dark, #333);
    padding: 1em;
    margin: 3em;
    top: -100vh;
    transition: top 300ms ease-in-out;
}
.menu-container.open .menu-contents {
    top: 0;
}


/* puzzle components */

.puzzle-view {
    margin: auto;
}

.puzzle-view.unsolved .solved-marker {
    visibility: hidden;
}

.puzzle-grid {
    margin: auto;
    cursor: default;
    table-layout: fixed;
    user-select: none;
    /* width and height to be set by script */
}

.puzzle-grid td {
    /* font-size: 150%; */
    border-radius: 2px;
    vertical-align: middle;
    overflow: clip;
}

.puzzle-wall-target.too-few-walls {
    color: red;
}
.puzzle-wall-target.too-many-walls {
    color: magenta;
}
.puzzle-wall-target.correct-walls {
    animation: pulse 167ms linear;
}

@keyframes pulse {
    50% {
        transform: scale(115%);
    }
    100% {
        transform: scale(100%);
    }
}

@keyframes dance {
    25% {
        transform: rotate(-10deg);
    }
    75% {
        transform: rotate(10deg);
    }
}

.puzzle-cell {
    transition-property: font-size, transform;
    transition-duration: 250ms;
}
.puzzle-cell[data-tile="Wall"] {
    background-color: rgb(75, 41, 2);
}
.puzzle-cell[data-tile="Wall"].too-many-walls {
    background-color: var(--low-contrast, darkred) var(--high-contrast, magenta);
}
.puzzle-cell[data-tile="Floor"],
.puzzle-cell[data-tile="Wall"] {
    color: var(--high-contrast, #222) var(--low-contrast, transparent);
}


.puzzle-view.solved .puzzle-cell[data-tile="Monster"],
.puzzle-view.solved .puzzle-cell[data-tile="BossMonster"] {
    font-size: 90%;
}
.puzzle-view.solved .puzzle-cell[data-tile="Treasure"] {
    transform: scale(110%);
}


/* editor */

.puzzle-editor-controls {
    float: left;
    text-align: left;
}
.puzzle-editor-controls fieldset {
    display: inline-block;
}
.puzzle-editor-controls input {
    font-size: 100%;
}


/* navigation */

.puzzle-list .puzzle-preview {
    display: none;
    position: absolute;
    left: 50%;
    margin-left: 10em;
    margin-top: -5em;
}
.puzzle-list:hover .puzzle-preview {
    display: block;
}

